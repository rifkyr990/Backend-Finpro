interface AddressData {
    name: string;
    phone: string;
    label: string;
    province: string;
    province_id: string | null;
    city: string;
    city_id: string | null;
    district: string;
    district_id: string | null;
    subdistrict: string;
    subdistrict_id: string | null;
    postal_code: string;
    street: string;
    detail?: string | null;
    latitude?: number | null;
    longitude?: number | null;
    is_primary?: boolean;
}
declare class UserAddressService {
    private static validateAddressData;
    static getAddress(userId: string): Promise<{
        name: string;
        id: number;
        phone: string;
        user_id: string;
        province: string;
        province_id: string | null;
        city: string;
        city_id: string | null;
        latitude: number | null;
        longitude: number | null;
        label: string;
        district: string;
        district_id: string | null;
        subdistrict: string | null;
        subdistrict_id: string | null;
        postal_code: string;
        street: string;
        detail: string | null;
        is_primary: boolean;
    }[]>;
    static createAddress(userId: string, data: Partial<AddressData>): Promise<{
        name: string;
        id: number;
        phone: string;
        user_id: string;
        province: string;
        province_id: string | null;
        city: string;
        city_id: string | null;
        latitude: number | null;
        longitude: number | null;
        label: string;
        district: string;
        district_id: string | null;
        subdistrict: string | null;
        subdistrict_id: string | null;
        postal_code: string;
        street: string;
        detail: string | null;
        is_primary: boolean;
    }>;
    static updateAddress(userId: string, id: number, data: Partial<AddressData>): Promise<{
        name: string;
        id: number;
        phone: string;
        user_id: string;
        province: string;
        province_id: string | null;
        city: string;
        city_id: string | null;
        latitude: number | null;
        longitude: number | null;
        label: string;
        district: string;
        district_id: string | null;
        subdistrict: string | null;
        subdistrict_id: string | null;
        postal_code: string;
        street: string;
        detail: string | null;
        is_primary: boolean;
    }>;
    static setPrimaryAddress(userId: string, addressId: number): Promise<{
        name: string;
        id: number;
        phone: string;
        user_id: string;
        province: string;
        province_id: string | null;
        city: string;
        city_id: string | null;
        latitude: number | null;
        longitude: number | null;
        label: string;
        district: string;
        district_id: string | null;
        subdistrict: string | null;
        subdistrict_id: string | null;
        postal_code: string;
        street: string;
        detail: string | null;
        is_primary: boolean;
    }>;
    static deleteAddress(userId: string, id: number): Promise<{
        name: string;
        id: number;
        phone: string;
        user_id: string;
        province: string;
        province_id: string | null;
        city: string;
        city_id: string | null;
        latitude: number | null;
        longitude: number | null;
        label: string;
        district: string;
        district_id: string | null;
        subdistrict: string | null;
        subdistrict_id: string | null;
        postal_code: string;
        street: string;
        detail: string | null;
        is_primary: boolean;
    }>;
}
export default UserAddressService;
//# sourceMappingURL=UserAddressService.d.ts.map